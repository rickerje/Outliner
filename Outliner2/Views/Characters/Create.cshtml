@model Outliner.Models.Character

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    Outline outline = ViewData["thisOutline"] as Outline;
}

<h2>Create</h2>

<h4>Character</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="name" class="control-label"></label>
                <input asp-for="name" class="form-control" />
                <span asp-validation-for="name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IsProtagonist" class="control-label">Is this your protagonist?</label><br />
                <input asp-for="IsProtagonist" type="radio" value="True" />Yes<br />
                <input asp-for="IsProtagonist" type="radio" value="False" />No
            </div>
            <input type="hidden" asp-for="OutlineID" value="@ViewBag.outlineID" />
            <!--<div class="form-group">
        <label asp-for="OutlineID" class="control-label"></label>
        <input asp-for="OutlineID" class="form-control" />
        <span asp-validation-for="OutlineID" class="text-danger"></span>
    </div>
        -->
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a> | 
    <a asp-controller="Outlines" asp-action="Details" asp-route-id="@ViewBag.OutlineID">Back to Outline</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
